Basic Indexing: 

2. Explain in one sentence why we might break an index into shards.
Ans: Since we can store as many documents as possible in an index, this may take a large amount of disk space resulting to its failure and so, it is necessary to split the indices into pieces called shards.

3. Explain in one sentence why we might replicate an index.
Ans: We might replicate an index to ensure high availability and provide backup. 

4. Explain in one sentence why your cluster health is yellow.
And: The cluster health is yellow as we have only one node and Elasticsearch created one replica for the customer index. This replica could not be allocated to a second node and so, its cluster health is yellow.

Indexing Reddit:

1. Ensure that your Elasticsearch instance has no indices in it. Provide the command you used to verify this.

Ans : curl -X GET "localhost:9200/_cat/indices?v&pretty"

2. Download the test.json file from the OWL assignment page. Run the following command, ensuring that you do this from the same folder that has thetest.json file in it. What is the name of the index created by the command?

Ans: The name of the index is comments. 

3. How large is the index? (pri.store.size)
Ans: 32.3 mb

Search : 

1. Do the three queries below return different sets of documents? How can you tell?
Ans: The three queries return different documents. 
This is because the id in the terms lookup was different for each document of each queries. Also, the returned output from the body were different. 

2. Give the highest score for each query.
Ans: The highest scores are as follows: Query 1 : max_score : 10.503806 , Query 2 : max_score : 11.629242, Query 3: max_score : 18.84402

3. What can you deduce about the default stemming procedure used by Elasticsearch?
Ans: Elasticsearch does not use any stemming procedure by default. 
The initial query searches for a derivation of the second query. However different sets of documents are returned.
Observing the results, the "match" category pulls out loosely related documents using the OR logic for searching "cat" and "cats" in Query 1 and Query 2 while using "and" logic for searching "cat cats" in Query 3. 

4. Give a query that could be used to check whether or not Elasticsearch removes a common English stopword.

Ans:  To check whether elasticsearch removes a common English stopword or not we can use the below query: 

curl -XGET 'localhost:9200/_search?pretty' -H 'Content-Type: application/json' -d' { "query": { "match" : { "body" : { "query" : "the"} } } } '

In order to remove a stopword, we can use the below query to get the appropriate result:

curl -X GET "localhost:9200/_analyze?pretty" -H 'Content-Type: application/json' -d'
{
  "tokenizer": "standard",
  "filter": [ "stop" ],
  "text": "a brown dog jumped over the white cat"
}
'

Analyzers:

1. Delete the all indices in your Elasticsearch instance before beginning this section. Submit the code you use to do so.
Ans: 
curl -X DELETE "localhost:9200/comments?pretty&pretty"

2. Re-run the three queries from the previous section. In a few sentences, describe how the results have changed.
Ans:
Query 1 gives max_score of 10.429893 (approx same as last time)
Query 2 gives max_score of 9.915877 (slight variation)
Query 3 gives max_score of 20.859785 (slight variation)
The results have a slight variation for the third query because of stemming.

3. Has the size of the index become larger or smaller compared with the previous runs? Why do you think this might be?

Ans: The size of the comments index has decreased to 25.2 mb. 

This is because standard analyzer removed punctuations, lowercased terms, and removed stop words, applied stemming and this decreased the size of the index.
